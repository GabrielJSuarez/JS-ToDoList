(()=>{const t=[],e=[{title:"Task 1",description:"Description 1",dueDate:"2021-06-10",priority:"Low"},{title:"Task 2",description:"Description 2",dueDate:"2021-06-10",priority:"Medium"},{title:"Task 3",description:"Description 3",dueDate:"2021-06-10",priority:"Medium"}];class r{constructor(t,e,r,i,o="All Tasks"){this.title=t,this.description=e,this.dueDate=r,this.priority=i,this.project=o}}class i{constructor(t,e){this.title=t,this.description=e}}const o=document.forms["project-form"];o.addEventListener("submit",(t=>{t.preventDefault()}));const s=(()=>{const r=()=>{document.querySelector("#project-list").innerHTML='\n      <li class="list-group-item list-group-item-dark" id="project-list">All Tasks</li>\n    '};return{defaultProject:r,createProject:()=>{document.querySelector("#project-btn").addEventListener("click",(()=>{const e=o.querySelector("#project-title").value,s=o.querySelector("#project-description").value,l=new i(e,s);t.push(l);const n=document.querySelector("#project-list");r();for(let e=0;e<t.length;e++)n.innerHTML+=`\n          <li class="list-group-item list-group-item-dark" id="project-list">${t[e].title}</li>\n        `;const c=document.querySelector("#task-project");c.innerHTML='\n        <option value="All Tasks">All Tasks</option>\n      ';for(let e=0;e<t.length;e++)c.innerHTML+=`\n          <option value="${t[e].title}">${t[e].title}</option>\n        `}))},renderTasks:()=>{document.querySelector("#project-list").addEventListener("click",(t=>{const r=t.target.textContent;document.querySelector("#task-display").classList.remove("d-none");const i=document.querySelector("#tasks-list");if(i.innerHTML="","All Tasks"===r)for(let t=0;t<e.length;t++)i.innerHTML+=`\n            <li class="list-group-item list-group-item-dark">${e[t].title}</li>\n          `;else{for(let t=0;t<e.length;t++)e[t].title===r&&(i.innerHTML+=`\n              <li class="list-group-item list-group-item-dark">${e[t].title}</li>\n            `);console.log(e)}}))}}})();s.defaultProject(),s.createProject(),s.renderTasks();const l=document.forms["tasks-form"];l.addEventListener("submit",(t=>{t.preventDefault()})),document.querySelector("#task-btn").addEventListener("click",(()=>{const t=l.querySelector("#task-name").value,i=l.querySelector("#task-description").value,o=l.querySelector("#task-date").value,s=l.querySelector("#task-priority").value,n=l.querySelector("#task-project").value,c=new r(t,i,o,s,n);e.push(c)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,